{"version":3,"sources":["components/Navbar.tsx","components/PrivateRoute.js","redux/types.js","redux/actions/taskActions.js","components/Task.tsx","components/CreateTask.tsx","components/MainBoard.tsx","components/Login.js","components/SignUp.js","components/MainRouter.js","firebaseConfig.tsx","redux/reducers/userReducer.tsx","redux/reducers/taskReducer.tsx","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","react_default","a","createElement","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Menu_default","Typography","variant","Button","connect","state","isLoggedIn","firebase","auth","isEmpty","_ref","Component","component","rest","Object","objectWithoutProperties","react_router","assign","render","props","to","pathname","from","location","SET_AUTHENTICATED","CREATE_TASK","CREATE_TASK_ERROR","DELETE_TASK","DELETE_TASK_ERROR","SET_TASK_TIME","SET_TASK_TIME_ERROR","SET_TASK_DONE","SET_TASK_DONE_ERROR","createTask","task","dispatch","getState","getFirestore","collection","add","objectSpread","totalTime","userId","uid","timestamp","Date","done","then","type","catch","err","card","minWidth","maxWidth","margin","avatar","backgroundColor","red","progressRing","progressRingCircle","transition","transform","transformOrigin","formatDate","timeStamp","date","toDate","getDate","getMonth","getFullYear","_ref2","data","firestore","tasks","taskId","userName","displayName","userPhoto","photoURL","deleteTask","doc","delete","setTotalTime","timeToAdd","update","setTaskTotalTime","setTaskDone","_done","_useState","useState","_useState2","slicedToArray","offset","setOffset","_useState3","_useState4","minutes","setMinutes","_useState5","_useState6","seconds","setSeconds","_useState7","_useState8","timeInterval","setTimeInterval","_useState9","_useState10","duration","setDuration","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","open","Boolean","radius","togleTimer","console","log","clearInterval","timer","Math","floor","round","interval","setInterval","i","PI","clearTimer","startTimer","Card","key","CardHeader","Avatar","src","action","onClick","event","currentTarget","MoreVert_default","Menu_Menu","id","keepMounted","onClose","PaperProps","style","width","MenuItem","padding","gutterBottom","Slider","ValueLabelComponent","children","value","popperRef","useRef","useEffect","current","Tooltip","PopperProps","enterTouchDelay","placement","defaultValue","min","max","onChange","e","subheader","CardActionArea","height","stroke","strokeWidth","fill","r","cx","cy","strokeDasharray","strokeDashoffset","x","y","textAnchor","fontFamily","fontSize","CardContent","taskName","description","CardActions","size","disabled","maxHeight","media","paddingTop","expand","marginLeft","transitions","create","shortest","expandOpen","textField","marginTop","createTaskAction","setTask","error","setError","handleOnChange","preventDefault","target","name","length","TextField","label","required","FormHelperText","multiline","rows","display","appBar","easing","sharp","leavingScreen","appBarShift","concat","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexDirection","flexWrap","contentShift","compose","store","ordered","firestoreConnect","where","dateFilter","setDateFilter","setOpen","selectedMenu","setSelectedMenu","openAnchor","useTheme","CssBaseline","clsx","defineProperty","noWrap","Drawer","anchor","paper","direction","ChevronLeft_default","ChevronRight_default","Divider","List","ListItem","button","ListItemIcon","AccountCircle_default","ListItemText","primary","logout","selected","MoveToInbox_default","now","filter","taskDate","sort","b","getTime","map","index","components_Task","paragraph","components_CreateTask","@global","body","palette","common","white","secondary","main","form","submit","withFirebase","history","email","setEmail","password","setPassword","handleOnClick","login","push","provider","handleChange","Container","LockOutlined_default","noValidate","fullWidth","autoComplete","autoFocus","FormControlLabel","control","Checkbox","isLoaded","Grid","container","item","xs","Link","href","SetEmail","SetPassword","firstName","SetFirstName","lastName","SetLastName","errors","SetErrors","sm","message","createUser","username","justify","react_router_dom","components_PrivateRoute","path","exact","MainBoard","Login","SignUp","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initialState","initializeApp","middleWare","thunk","withExtraArgument","reducers","combineReducers","user","arguments","undefined","authentificated","createTaskError","deleteTaskError","setTaskError","firebaseReducer","firestoreReducer","createStore","applyMiddleware","apply","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","App","es","react_redux_firebase_es","components_Navbar","components_MainRouter","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fbdfdf19.chunk.js","sourcesContent":["import React from 'react'\n//MUI staff\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n    }),\n);\n\nfunction Navbar() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        News\n                    </Typography>\n                    <Button color=\"inherit\">Login</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport { Redirect, Route} from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nfunction PrivateRoute({component: Component, isLoggedIn, ...rest}) {   \n    return (\n        <Route \n            {...rest}\n            render={props => isLoggedIn? (\n                <Component {...props} />\n                ) : (\n                    <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n                )}\n        />\n    )\n}\n\nfunction mapStateToProps(state){\n    return {\n        isLoggedIn: !state.firebase.auth.isEmpty,\n    };\n}\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","export const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\nexport const CREATE_TASK = 'CREATE_TASK';\nexport const CREATE_TASK_ERROR = 'CREATE_TASK_ERROR';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const DELETE_TASK_ERROR = 'DELETE_TASK_ERROR';\nexport const SET_TASK_TIME = 'SET_TASK_TIME';\nexport const SET_TASK_TIME_ERROR = 'SET_TASK_TIME_ERROR';\nexport const SET_TASK_DONE = 'SET_TASK_DONE';\nexport const SET_TASK_DONE_ERROR = 'SET_TASK_DONE_ERROR';\nexport const SET_USER = 'SET_USER';\nexport const LOADING_USER = 'LOADING_USER';\n","import {\n    CREATE_TASK,\n    CREATE_TASK_ERROR,\n    DELETE_TASK,\n    DELETE_TASK_ERROR,\n    SET_TASK_TIME,\n    SET_TASK_TIME_ERROR,\n    SET_TASK_DONE,\n    SET_TASK_DONE_ERROR,\n} from '../types'\n\nexport const createTask = (task) => {\n    return (dispatch, getState, getFirestore) => {\n        const firestore = getFirestore();\n        firestore.collection('tasks').add({\n            ...task,\n            totalTime: 0,\n            userId: getState().firebase.auth.uid,\n            timestamp: new Date(),\n            done: false,\n        }).then(() => {\n            dispatch({ type: CREATE_TASK, task });\n        }).catch((err) => {\n            dispatch({ type: CREATE_TASK_ERROR }, err);\n        });\n    }\n}\n\nexport const deleteTask = (taskId) => {\n    return (dispatch, getState, getFirestore) => {\n        const firestore = getFirestore();\n        firestore.collection('tasks').doc(taskId).delete()\n            .then(() => {\n                dispatch({ type: DELETE_TASK, taskId });\n            }).catch(err => {\n                dispatch({ type: DELETE_TASK_ERROR, err });\n            });\n    }\n}\n\nexport const setTaskTotalTime = (taskId, timeToAdd) => {\n    return (dispatch, getState, getFirestore) => {\n        const firestore = getFirestore();\n        firestore.update({ collection: 'tasks', doc: taskId }, { totalTime: timeToAdd })\n            .then(() => {\n                dispatch({ type: SET_TASK_TIME, taskId });\n            }).catch(err => {\n                dispatch({ type: SET_TASK_TIME_ERROR, err });\n            });\n    }\n}\n\nexport const setTaskDone = (taskId, _done) => {\n    return (dispatch, getState, getFirestore) => {\n        const firestore = getFirestore();\n        firestore.update({ collection: 'tasks', doc: taskId }, { done: _done })\n            .then(() => {\n                dispatch({ type: SET_TASK_DONE, taskId });\n            }).catch(err => {\n                dispatch({ type: SET_TASK_DONE_ERROR, err})\n            })\n    }\n}","import React, { useState } from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\nimport Card from '@material-ui/core/Card'\n\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport Slider from '@material-ui/core/Slider'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { red } from '@material-ui/core/colors'\nimport PopperJs from 'popper.js'\nimport { firestore } from 'firebase';\nimport { deleteTask, setTaskTotalTime, setTaskDone } from '../redux/actions/taskActions'\n\nconst useStyles = makeStyles(theme =>\n    createStyles({\n        card: {\n            minWidth: 330,\n            maxWidth: 330,\n            margin: theme.spacing(3),\n        },\n        avatar: {\n            backgroundColor: red[500],\n        },\n        progressRing: {\n            margin: \"10px auto 10px 60px\",\n        },\n        progressRingCircle: {\n            transition: \"0.35s stroke-dashoffset\",\n            // axis compensation\n            transform: \"rotate(-90deg)\",\n            transformOrigin: \"50% 50%\",\n        }\n    })\n);\n\nconst formatDate = (timeStamp: firestore.Timestamp) => {\n    const date = timeStamp.toDate();\n    const days = (date.getDate() > 10) ? (date.getDate()) : (\"0\" + date.getDate());\n    const months = (date.getMonth() > 10) ? (date.getMonth()) : (\"0\" + date.getMonth());\n    return days + '.' + months + '.' + date.getFullYear();\n}\n\nfunction Task({\n    task,\n    userName,\n    userPhoto,\n    deleteTask,\n    setTotalTime,\n    setTaskDone,\n    taskId,\n}: {\n    task: TaskType,\n    userName: string,\n    userPhoto: string,\n    deleteTask: any,\n    setTotalTime: any,\n    setTaskDone: any,\n    taskId: string\n}) {\n    const [offset, setOffset] = useState(0);\n    const [minutes, setMinutes] = useState(0);\n    const [seconds, setSeconds] = useState(0);\n    const [timeInterval, setTimeInterval] = useState();\n    const [duration, setDuration] = useState(20);\n\n    //MIU declarations\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const classes = useStyles();\n    const open = Boolean(anchorEl);\n    const radius = 86;\n\n    function togleTimer() {\n        if (!timeInterval) startTimer()\n        else stopTimer();\n    }\n\n    function startTimer() {\n        if(task.done) return;\n        let timer = duration;\n        if (minutes !== 0 || seconds !== 0) timer = minutes * 60 + seconds;\n\n        setMinutes(Math.floor(timer / 60));\n        setSeconds(Math.round(timer % 60));\n\n        let interval = (setInterval(() => {\n            let i = (radius * 2 * Math.PI) - (timer / duration) * (radius * 2 * Math.PI);\n            setOffset(i);\n            setMinutes(Math.floor(timer / 60));\n            setSeconds(Math.round(timer % 60));\n\n            if (--timer === -1) {\n                clearTimer();\n                clearInterval(interval);\n                setTotalTime(taskId, task.totalTime + duration);\n            }\n        }, 1000));\n        setTimeInterval(interval);\n    }\n\n    function stopTimer() {\n        console.log(timeInterval);\n        clearInterval(timeInterval);\n        setTimeInterval(null);\n    }\n\n    function clearTimer() {\n        clearInterval(timeInterval);\n        setTimeInterval(null);\n        setMinutes(0);\n        setSeconds(0);\n        setOffset(0);\n    }\n\n    function handleDelete() {\n        deleteTask(taskId);\n        setAnchorEl(null);\n    }\n\n    function handleOnChangeDuration(e: any, value: any) {\n        setDuration(value);\n    }\n\n    function handleSetTaskDone() {\n        setTaskDone(taskId, !task.done);\n        setAnchorEl(null);\n    }\n\n    //MUI function\n    function handleMenuOnClose() {\n        setAnchorEl(null);\n    }\n\n    function ValueLabelComponent(props: any) {\n        const { children, open, value } = props;\n\n        const popperRef = React.useRef<PopperJs | null>(null);\n        React.useEffect(() => {\n            if (popperRef.current) {\n                popperRef.current.update();\n            }\n        });\n\n        return (\n            <Tooltip\n                PopperProps={{\n                    popperRef,\n                }}\n                open={open}\n                enterTouchDelay={0}\n                placement=\"top\"\n                title={value}\n            >\n                {children}\n            </Tooltip>\n        );\n    }\n\n    function handleMenuOnClick(event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    return (\n        <Card className={classes.card} key={taskId}>\n            <CardHeader\n                avatar={\n                    <Avatar\n                        aria-label=\"user\"\n                        className={classes.avatar}\n                        src={userPhoto}\n                    >\n                        U\n                    </Avatar>\n                }\n                action={\n                    <div>\n                        <IconButton\n                            aria-label=\"settings\"\n                            onClick={handleMenuOnClick}\n                        >\n                            <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"long-menu\"\n                            anchorEl={anchorEl}\n                            keepMounted\n                            open={open}\n                            onClose={handleMenuOnClose}\n                            PaperProps={{\n                                style: {\n                                    width: 300,\n                                },\n                            }}\n                        >\n                            <MenuItem onClick={handleSetTaskDone}>\n                                Mark as {(task.done) ? 'undone' : 'done'}\n                            </MenuItem>\n                            <MenuItem onClick={handleDelete}>\n                                Delete Task\n                            </MenuItem>\n                            <div style={{ padding: 16 }}>\n                                <Typography\n                                    gutterBottom\n                                >Set timer</Typography>\n                                <Slider\n                                    ValueLabelComponent={ValueLabelComponent}\n                                    aria-label=\"custom thumb label\"\n                                    defaultValue={20}\n                                    min={5}\n                                    max={30}\n                                    onChange={handleOnChangeDuration}\n                                />\n                            </div>\n                        </Menu>\n                    </div>\n                }\n                title={userName}\n                subheader={formatDate(task.timestamp)}\n            />\n            <CardActionArea onClick={togleTimer}>\n\n                <svg\n                    className={classes.progressRing}\n                    width=\"200\"\n                    height=\"200\">\n                    <g>\n                        <circle\n                            className={classes.progressRingCircle}\n                            stroke={(task.done) ? 'grey' : 'rgb(0,0,255)'}\n                            strokeWidth=\"4\"\n                            fill=\"transparent\"\n                            r={radius}\n                            cx=\"100\"\n                            cy=\"100\"\n                            strokeDasharray={(radius * 2 * Math.PI) + ' ' + (radius * 2 * Math.PI)}\n                            strokeDashoffset={offset} />\n                        <text\n                            x=\"100\"\n                            y=\"100\"\n                            textAnchor=\"middle\"\n                            fontFamily=\"Verdana\"\n                            fontSize=\"15\"\n                            fill=\"black\">\n                            {(minutes < 10) ? \"0\" + minutes : minutes}:{(seconds < 10) ? \"0\" + seconds : seconds}\n                        </text>\n                    </g>\n                </svg>\n            </CardActionArea>\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" \n                    color={(task.done)? 'textSecondary' : 'textPrimary'}\n                >\n                    {task.taskName}\n                </Typography>\n                <Typography component=\"p\" \n                    color={(task.done)? 'textSecondary' : 'primary'}\n                >\n                    Total time: {task.totalTime}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {task.description} \n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" color=\"primary\" \n                    onClick={togleTimer}\n                    disabled={task.done}\n                >\n                    { (!timeInterval)? 'Start' : 'Stop'}\n                </Button>\n                <Button size=\"small\" color=\"primary\" \n                    onClick={clearTimer}\n                    disabled={task.done}\n                >\n                    Clear\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default\n    connect(({ firestore: { data }, firebase: { auth } }: { firestore: any, firebase: any }, props: any) => ({\n        task: data.tasks && data.tasks[props.taskId],\n        userName: auth.displayName,\n        userPhoto: auth.photoURL,\n    }), (dispatch: any) => {\n        return {\n            deleteTask: (taskId: string) => dispatch(deleteTask(taskId)),\n            setTotalTime: (taskId: string, timeToAdd: number) => {\n                return dispatch(setTaskTotalTime(taskId, timeToAdd));\n            },\n            setTaskDone: (taskId: string, done: boolean) => {\n                return dispatch(setTaskDone(taskId, done));\n            }\n        }\n    })(Task);\n\nexport interface TaskType {\n    taskName: string,\n    description: string,\n    timestamp: firestore.Timestamp,\n    totalTime: number,\n    userId: string,\n    done: boolean,\n}","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button'\nimport { red } from '@material-ui/core/colors';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport { createTask as createTaskAction } from '../redux/actions/taskActions';\n\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        card: {\n            width: 310,\n            maxHeight: 230,\n            margin: theme.spacing(3),\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        },\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        avatar: {\n            backgroundColor: red[500],\n        },\n        textField: {\n            marginTop: 18,\n        }\n    }),\n);\n\nfunction CreateTask({ createTask }: { createTask: any }) {\n    const [task, setTask] = useState({ taskName: '', description: '' });\n    const [error, setError] = useState({ taskName: '', description: '' });\n\n    const classes = useStyles();\n\n    function handleCreateTask(e: any) {\n        e.preventDefault();\n        if(error.taskName || error.description) return;\n        if (!task.taskName || !task.description) {\n            setError({\n                ...error,\n                taskName: (!task.taskName) ? 'Enter name! ' : '',\n                description: (!task.description) ? 'Enter description! ' : '',\n            });\n            return;\n        }\n        \n        createTask(task);\n        setTask({ taskName: '', description: '' });\n    }\n\n    function handleOnChange(e: any) {\n        e.preventDefault();\n        switch (e.target.name) {\n            case 'taskName':\n                setTask({ ...task, taskName: e.target.value });\n                if (e.target.value === '') setError({ ...error, taskName: 'Enter name! ' });\n                else if(e.target.value.length > 20) setError({ ...error, taskName: 'Name should be less than 20 symbols! ' });\n                else setError({ ...error, taskName: '' });\n                break;\n            case 'description':\n                setTask({ ...task, description: e.target.value });\n                if (e.target.value === '') setError({ ...error, description: 'Enter description! ' });\n                else if(e.target.value.length > 50) setError({ ...error, description: 'Name should be less than 50 symbols! ' });\n                else setError({ ...error, description: '' });\n                break;\n            default:\n                return;\n        }\n    }\n\n    function cancel() {\n        setTask({ taskName: '', description: '' });\n    }\n\n    return (\n        <Card className={classes.card}>\n            <CardContent>\n                <TextField\n                    id=\"taskName\"\n                    name=\"taskName\"\n                    label=\"Task Name\"\n                    required={true}\n                    error={Boolean(error.taskName)}\n                    value={task.taskName}\n                    onChange={handleOnChange}\n                ></TextField>\n                {error.taskName && (\n                    <FormHelperText id=\"component-error-text\">\n                        {error.taskName}\n                    </FormHelperText>\n                )}\n                <TextField\n                    className={classes.textField}\n                    id=\"description\"\n                    name=\"description\"\n                    label=\"Description\"\n                    required={true}\n                    multiline\n                    rows={2}\n                    error={Boolean(error.description)}\n                    value={task.description}\n                    onChange={handleOnChange}\n                ></TextField>\n                {error.description && (\n                    <FormHelperText id=\"component-error-text\">\n                        {error.description}\n                    </FormHelperText>\n                )}\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" color=\"primary\" onClick={handleCreateTask}>\n                    Create\n                </Button>\n                <Button size=\"small\" color=\"secondary\" onClick={cancel}>\n                    Cancel\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nfunction mapActionsToProps(dispatch: any) {\n    return {\n        createTask: (task: any) => dispatch(createTaskAction(task))\n    }\n}\n\nexport default connect(null, mapActionsToProps)(CreateTask)\n","//React\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport Task, { TaskType } from './Task'\nimport CreateTask from './CreateTask';\n//Firebase\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase'\n//MUI\nimport clsx from 'clsx'\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport UserIcon from '@material-ui/icons/AccountCircle'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        hide: {\n            display: 'none',\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        drawerHeader: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n            justifyContent: 'flex-end',\n        },\n        content: {\n            flexGrow: 1,\n            display: 'flex',\n            flexDirection: 'row',\n            flexWrap: 'wrap',\n            padding: theme.spacing(3),\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            marginLeft: -drawerWidth,\n        },\n        contentShift: {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginLeft: 0,\n        },\n        card: {\n            maxWidth: 345,\n            margin: theme.spacing(3),\n        },\n    }),\n);\n\nfunction MainBoard({ firebase, tasks, userName, userId }: { firebase: any, tasks: any, userName: string, userId: string }) {\n    const [dateFilter, setDateFilter] = useState<any>(null);\n\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const [open, setOpen] = useState(true);\n    const [selectedMenu, setSelectedMenu] = useState('');\n    const openAnchor = Boolean(anchorEl);\n    const classes = useStyles();\n    const theme = useTheme();\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n    function handleOnMenuClose() {\n        setAnchorEl(null);\n    }\n\n    function handleOnCLickDateFilter() {\n        setDateFilter(new Date()); \n        setSelectedMenu('Today');\n    }\n\n    function handleOnCLickDateFilterYesterday() {\n        setDateFilter(new Date(Date.now() - 86400000));\n        setSelectedMenu('Yesterday');\n    }\n    \n    function handleOnCLickNoDateFilter() {\n        setDateFilter(null);\n        setSelectedMenu('');\n    }\n\n    function handleMenuOnClick(event: React.MouseEvent<HTMLElement>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleLogOut() {\n        setAnchorEl(null);\n        firebase.logout();\n    }\n\n    function filterTasks(task: TaskType) {\n        if (!dateFilter) return true;\n        const taskDate = task.timestamp.toDate();\n        if (taskDate.getFullYear() === dateFilter.getFullYear() &&\n            taskDate.getMonth() === dateFilter.getMonth() &&\n            taskDate.getDate() === dateFilter.getDate()\n        ){\n            return true;\n        }  \n        return false;\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        TEAM TOMATO\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    <ListItem button onClick={handleMenuOnClick}>\n                        <ListItemIcon><UserIcon /></ListItemIcon>\n                        <ListItemText primary={userName} />\n                    </ListItem>\n                    <Menu\n                        id=\"long-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={openAnchor}\n                        onClose={handleOnMenuClose}\n                        PaperProps={{\n                            style: {\n                                width: 200,\n                            },\n                        }}\n                    >\n                        <MenuItem onClick={handleLogOut}>\n                            Log Out\n                        </MenuItem>\n                    </Menu>\n                    <MenuItem \n                        button \n                        onClick={handleOnCLickDateFilter} \n                        key={\"Today\"} \n                        selected={selectedMenu==='Today'}\n                    >\n                        <ListItemIcon><InboxIcon /></ListItemIcon>\n                        <ListItemText primary={\"Today\"} />\n                    </MenuItem>\n                    <MenuItem \n                        button \n                        onClick={handleOnCLickDateFilterYesterday} \n                        key={\"Yesterday\"}\n                        selected={selectedMenu==='Yesterday'}\n                    >\n                        <ListItemIcon><InboxIcon/></ListItemIcon>\n                        <ListItemText primary={\"Yesterday\"} />\n                    </MenuItem>\n                    <MenuItem id=\"Any time\" button onClick={handleOnCLickNoDateFilter} key={\"Any time\"}>\n                        <ListItemIcon><InboxIcon /></ListItemIcon>\n                        <ListItemText primary={\"Any time\"} />\n                    </MenuItem>\n                </List>\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n                {\n                    (tasks) ? tasks.filter(filterTasks).sort((a: TaskType, b: TaskType) => {\n                        return b.timestamp.toDate().getTime() - a.timestamp.toDate().getTime();\n                    }).map((task: any, index: number) => (\n                        <Task taskId={task.id} key={task.id} />\n                    )) : (\n                            <Typography paragraph>Loading...</Typography>\n                        )\n                }\n                <CreateTask />\n            </main>\n        </div>\n    );\n}\n\nexport default compose(\n    connect((store: any) => {\n        console.log(store);\n        return {\n            tasks: store.firestore.ordered.tasks,\n            userName: store.firebase.auth.displayName,\n            userId: store.firebase.auth.uid,\n        }\n    }),\n    firestoreConnect(({ userId }: any) => {\n        if (!userId) return [];\n        return [{\n            collection: 'tasks',\n            where: ['userId', '==', userId]\n        }]\n    }),\n)(MainBoard)","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n//  Firebase\nimport { withFirebase, isLoaded, isEmpty } from 'react-redux-firebase'\n//  MIU\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n//  MIU styles\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n// Login Component\nfunction Login({ firebase, auth, history }) {\n    console.log(auth);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    function loginWithGoogle() {\n        firebase.login({ provider: 'google', type: 'popup' }).then(() => {\n            history.push('/');\n        });\n    }\n\n    function handleOnClick(e) {\n        e.preventDefault();\n        if (email && password) {\n            firebase.login({\n                email,\n                password\n            }).then(() => {\n                history.push('/');\n            })\n            return;\n        }\n        isEmpty(auth) ? loginWithGoogle() : firebase.logout()\n        console.log('ok!')\n    }\n    function handleChange(e) {\n        switch (e.target.name) {\n            case 'email':\n                setEmail(e.target.value);\n                break;\n            case 'password':\n                setPassword(e.target.value);\n                break;\n            default: return;\n        }\n    }\n\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Log in\n                    </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={email}\n                        onChange={handleChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={handleChange}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        disabled={!isLoaded(auth)}\n                        onClick={handleOnClick}\n                    >\n                        {isEmpty(auth) ? 'Sign In' : 'Log out'}\n                    </Button>\n                    <Button\n                        type=\"button\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.submit}\n                        disabled={!isLoaded(auth)}\n                        onClick={handleOnClick}\n                    >\n                        LogIn with Google\n                        </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                                </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"/signup\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    )\n}\n\nLogin.propTypes = {\n    firebase: PropTypes.shape({\n        login: PropTypes.func.isRequired\n    }),\n    auth: PropTypes.object\n}\n\nexport default compose(\n    withFirebase,\n    connect(({ firebase: { auth } }) => ({ auth }))\n)(Login)\n","import React, { useState } from 'react';\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n//  Firebase\nimport { withFirebase } from 'react-redux-firebase'\n//  MUI\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction SignUp({firebase, auth}) {\n    \n    const [email, SetEmail] = useState('');\n    const [password, SetPassword] = useState('');\n    const [firstName, SetFirstName] = useState('');\n    const [lastName, SetLastName] = useState('');\n    const [errors, SetErrors] = useState(''); \n\n    function handleOnChange(e) {\n        switch(e.target.name){\n            case 'email' : \n                SetEmail(e.target.value);\n                break;\n            case 'password' :\n                SetPassword(e.target.value);\n                break;\n            case 'firstName' :\n                SetFirstName(e.target.value);\n                break;\n            case 'lastName' :\n                SetLastName(e.target.value);\n                break;\n            default :\n                return;\n        }\n    }\n\n    function loginWithGoogle(e) {\n        e.preventDefault();\n        return firebase.login({ provider: 'google', type: 'popup' });\n    }\n\n    function createUserwithCredentials(e) {\n        e.preventDefault();\n        console.log('fetchdata');\n        firebase.createUser({\n            email: email,\n            password: password\n        }, {\n            username: firstName + ' ' + lastName,\n            email: email\n        })\n        .then(data => console.log(data))\n        .catch(err => {\n            SetErrors(err);\n        });\n    }\n\n    \n        const classes = useStyles();\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <form className={classes.form} noValidate>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"fname\"\n                                    name=\"firstName\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                    value={firstName}\n                                    onChange={handleOnChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    autoComplete=\"lname\"\n                                    value={lastName}\n                                    onChange={handleOnChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    value={email}\n                                    onChange={handleOnChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    value={password}\n                                    onChange={handleOnChange}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Typography component=\"h5\" variant=\"h6\" color=\"secondary\">\n                        {errors&&errors.message}\n                        </Typography>\n                        \n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            onClick={createUserwithCredentials}\n                        >\n                            Sign Up\n                    </Button>\n                        <Button\n                            type=\"button\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.submit}\n                            onClick={loginWithGoogle}\n                        >\n                            SignUp with Google\n                    </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/login\" variant=\"body2\">\n                                    Already have an account? Log in\n                            </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Container>\n        );\n}\n\nexport default compose(\n    withFirebase,\n    connect(({ firebase: { auth } }) => ({ auth }))\n)(SignUp)","import React from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PrivateRoute from './PrivateRoute'\nimport MainBoard from './MainBoard'\nimport Login from './Login'\nimport SignUp from './SignUp'\n\nfunction MainRouter(props) {\n    if (!props.auth.isLoaded) return (<div>loading...</div>)\n    return (\n            <div>\n                <Router>\n                    <Switch>\n                        <PrivateRoute path=\"/\" exact component={MainBoard} />\n                        <Route path=\"/login\" component={Login} />\n                        <Route path=\"/signup\" component={SignUp} />\n                    </Switch>\n                </Router>\n            </div>\n    )\n}\n\nexport default connect((state) => {\n    return { auth: state.firebase.auth }\n})(MainRouter)\n","const firebaseConfig = {\n    apiKey: \"AIzaSyDB464_icNem-DnDnJNDYxpce6oxaXsK9E\",\n    authDomain: \"teamtomato-c00e4.firebaseapp.com\",\n    databaseURL: \"https://teamtomato-c00e4.firebaseio.com\",\n    projectId: \"teamtomato-c00e4\",\n    storageBucket: \"teamtomato-c00e4.appspot.com\",\n    messagingSenderId: \"910619689905\",\n    appId: \"1:910619689905:web:3878cb98b3974232\"\n};\n\nexport default firebaseConfig;","import {\n    SET_AUTHENTICATED,\n} from '../types'\n\nconst initialState = {}\n\nexport default function userReducer (state = initialState, action : any) {\n    switch(action.type) {\n        case SET_AUTHENTICATED :\n            return {\n                ...state,\n                authentificated: true\n            };\n        default :\n            return { ...state }\n    }\n}","import {\n    CREATE_TASK,\n    CREATE_TASK_ERROR,\n    DELETE_TASK,\n    DELETE_TASK_ERROR,\n    SET_TASK_TIME,\n    SET_TASK_TIME_ERROR,\n    SET_TASK_DONE,\n    SET_TASK_DONE_ERROR,\n} from '../types'\n\nconst initialState = {}\n\nexport default function taskReducer(state = initialState, action: any) {\n    switch (action.type) {\n        case CREATE_TASK:\n            return {\n                ...state,\n                createTaskError: null,\n            };\n        case CREATE_TASK_ERROR:\n            return {\n                ...state,\n                createTaskError: action.err,\n            };\n        case DELETE_TASK:\n            return {\n                ...state,\n                deleteTaskError: null,\n            };\n        case DELETE_TASK_ERROR:\n            return {\n                ...state,\n                deleteTaskError: action.err,\n            };\n        case SET_TASK_TIME:\n            return {\n                ...state,\n                setTaskError: null,\n            };\n        case SET_TASK_TIME_ERROR:\n            return {\n                ...state,\n                setTaskError: action.err,\n            };\n        case SET_TASK_DONE:\n            return {\n                ...state,\n                setTaskError: null,\n            };\n        case SET_TASK_DONE_ERROR:\n            return {\n                ...state,\n                setTaskError: action.err,\n            };\n        default:\n            return { ...state }\n    }\n}","// Redux\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n// FireBase\nimport firebase from 'firebase'\nimport firebaseConfig from '../firebaseConfig'\nimport 'firebase/firestore'\n\n// Reducers\nimport userReducer from './reducers/userReducer'\nimport taskReducer from './reducers/taskReducer'\nimport { firebaseReducer } from 'react-redux-firebase'\nimport { firestoreReducer, getFirestore, reduxFirestore } from 'redux-firestore'\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nconst initialState = {};\n\nconst middleWare = [thunk.withExtraArgument(getFirestore)];\n\nconst reducers = combineReducers({\n    user: userReducer,\n    task: taskReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer\n})\n\nconst store = createStore(\n    reducers, \n    initialState, \n    compose( \n        applyMiddleware(...middleWare), \n        reduxFirestore(firebase)\n    ));\n\nexport default store;","import React from 'react'\n// Components\nimport Navbar from './components/Navbar'\nimport MainRouter from './components/MainRouter'\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// FireBase\nimport * as firebase from 'firebase'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport { createFirestoreInstance } from 'redux-firestore'\n// Styles\nimport './App.css';\n\nconst rrfProps = {\n  firebase,\n  config: { \n    userProfile: 'users',\n    useFirestoreForProfile: true,\n  },\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <Navbar />\n        <MainRouter />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}